/**********************************************************
*	Create Databe SGSO_RESCUE
*	Creacción de tablas 
*	Version Inicial
*
*	Nombre				Fecha				Descripcion
*	--------------------------------------------------------
*	Julio Daviu			03-02-2019			Creacion Tablas
*
*
*
*************************************************************/
USE SGSO_RESCUE

GO

--CREANDO ESQUEMA PROEYCTOS

PRINT 'CREANDO ESQUEMA PROYECTOS';

IF NOT EXISTS (SELECT 1 FROM sys.schemas WHERE name = 'Proyectos')

	BEGIN
		EXEC('CREATE SCHEMA Proyectos')

		PRINT 'ESQUEMA PROYECTOS CREADO';
	END
ELSE
	BEGIN
		PRINT 'ESQUEMA PROYECTO YA EXISTE';
	END

GO

-- TABLA PROYECTO

PRINT 'CREANDO TABLA PROYECTO';

IF NOT EXISTS (SELECT 1 FROM  sys.objects WHERE object_id=object_id(N'[Proyectos].[Proyecto]')
			AND type in (N'U'))

BEGIN
		CREATE TABLE [Proyectos].Proyecto(ID_PROYECTO INT NOT NULL IDENTITY(1,1) CONSTRAINT PK_PROYECTO PRIMARY KEY
										,NOMBRE VARCHAR(100) CONSTRAINT NN_NOM_PROYE NOT NULL
										,RESPONSABLE INT CONSTRAINT NN_RESP_PROYE NOT NULL
										,CIUDAD VARCHAR(50) CONSTRAINT NN_CIU_PROYE NOT NULL
										,PROVINCIA VARCHAR(150) CONSTRAINT NN_PROV_PROYE NOT NULL
										,DIRECCION VARCHAR(150) CONSTRAINT NN_DIR_PROYE NOT NULL);

		PRINT 'TABLA PROYECTO CREADA';
END
ELSE
	BEGIN

		PRINT 'TABLA Proyecto NO CREADA, YA EXISTE EN LA BASE DE DATOS';

	END

GO

--CREANDO ESQUEMA USUARIO

PRINT 'CREANDO ESQUEMA USUARIO';

IF NOT EXISTS (SELECT 1 FROM sys.schemas WHERE name = 'Usuario')

	BEGIN
		EXEC('CREATE SCHEMA Usuario')

		PRINT 'ESQUEMA Usuario CREADO';
	END
ELSE
	BEGIN
		PRINT 'ESQUEMA Usuario YA EXISTE';
	END

GO

--CREANDO TABLA PERSONA

PRINT 'CREANDO TABLA PERSONA';

IF NOT EXISTS (SELECT 1 FROM  sys.objects WHERE object_id=object_id(N'[Usuario].[Persona]')
			AND type in (N'U'))

BEGIN
		CREATE TABLE Usuario.Persona(ID_PERSONA INT NOT NULL IDENTITY(1,1) CONSTRAINT PK_PERSONA PRIMARY KEY
									, NOMBRE VARCHAR(50)  CONSTRAINT NN_PER_NOM NOT NULL
									, APELLIDO VARCHAR(50) CONSTRAINT NN_PER_APE NOT NULL
									, EMAIL VARCHAR(80) CONSTRAINT NN_PER_EMA NOT NULL
									, DIRECCION VARCHAR(100) CONSTRAINT NN_PER_DIR NOT NULL
									, TELEFONO VARCHAR(50) 
									);

		PRINT 'TABLA Persona CREADA';
END
ELSE
	BEGIN

		PRINT 'TABLA  Pesona  NO CREADA, YA EXISTE EN LA BASE DE DATOS';

	END

GO

--CREANDO TABLA LOGIN

PRINT 'CREANDO TABLA LOGIN';

IF NOT EXISTS (SELECT 1 FROM  sys.objects WHERE object_id=object_id(N'[Usuario].[Login]')
			AND type in (N'U'))

BEGIN
		CREATE TABLE Usuario.[Login](ID_LOGIN INT NOT NULL IDENTITY(1,1) CONSTRAINT PK_LOGIN PRIMARY KEY
									, ID_PERSONA INT CONSTRAINT FK_PERSONA FOREIGN KEY(ID_PERSONA) REFERENCES Usuario.Persona(ID_PERSONA)
									, USUARIO VARCHAR(50) CONSTRAINT NN_LOG_USE NOT NULL
									, ESTADO BIT CONSTRAINT NN_LOG_EST NOT NULL
									);

		PRINT 'TABLA Login CREADA';
END
ELSE
	BEGIN

		PRINT 'TABLA  Login  NO CREADA, YA EXISTE EN LA BASE DE DATOS';

	END

GO

--CREANDO TABLA LOGIN

PRINT 'CREANDO TABLA LOGIN';

IF NOT EXISTS (SELECT 1 FROM  sys.objects WHERE object_id=object_id(N'[Usuario].[Login]')
			AND type in (N'U'))

BEGIN
		CREATE TABLE Usuario.[Login](ID_LOGIN INT NOT NULL IDENTITY(1,1) CONSTRAINT PK_LOGIN PRIMARY KEY
									, ID_PERSONA INT CONSTRAINT FK_PERSONA FOREIGN KEY(ID_PERSONA) REFERENCES Usuario.Persona(ID_PERSONA)
									, USUARIO VARCHAR(50) CONSTRAINT NN_LOG_USE NOT NULL
									, ESTADO BIT CONSTRAINT NN_LOG_EST NOT NULL
									);

		PRINT 'TABLA Login CREADA';
END
ELSE
	BEGIN

		PRINT 'TABLA  Login  NO CREADA, YA EXISTE EN LA BASE DE DATOS';

	END

GO